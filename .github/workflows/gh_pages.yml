# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      SITE_DIR: format('{0}/_site', 'GITHUB_WORKSPACE')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure python version
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install antsibull via pip
        run: pip install ansible-core antsibull-docs
      - name: Install antsibull via pip
        run: ansible-galaxy install -r requirements.yml

      # Setup and configure before building docsite
      - name: Install this ansible collection
        run: ansible-playbook $GITHUB_WORKSPACE/playbooks/install.yml
      - name: Create directory
        run: mkdir $GITHUB_WORKSPACE/_site
      - name: Build a docsite with antsibull-docs
        run: antsibull-docs sphinx-init --use-current --dest-dir $GITHUB_WORKSPACE/_site ansi_colle.mods
      - name: Install additional pip requirement
        run: pip install -r $GITHUB_WORKSPACE/_site/requirements.txt

      # Create and upload docsite
      - name: Build docsite
        run: $GITHUB_WORKSPACE/_site/build.sh
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: $GITHUB_WORKSPACE/_site/build/html/

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
